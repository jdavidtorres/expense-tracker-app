name: CI Build

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Build shared libraries on Linux
  build-shared:
    name: Build Shared Projects
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore and build shared library
      run: |
        dotnet restore ExpenseTracker.Shared/ExpenseTracker.Shared.csproj
        dotnet build ExpenseTracker.Shared/ExpenseTracker.Shared.csproj --configuration Release --no-restore

    - name: Check for test projects
      id: check-tests
      run: |
        if find . -name "*.csproj" -exec grep -l "Microsoft.NET.Test.Sdk\|xunit\|NUnit\|MSTest" {} \; | grep -q .; then
          echo "has_tests=true" >> $GITHUB_OUTPUT
        else
          echo "has_tests=false" >> $GITHUB_OUTPUT
        fi

    - name: Run tests
      if: steps.check-tests.outputs.has_tests == 'true'
      run: |
        # Run tests only on projects that have test frameworks
        dotnet test ExpenseTracker.Shared/ExpenseTracker.Shared.csproj --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --logger trx || true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always() && steps.check-tests.outputs.has_tests == 'true'
      with:
        name: test-results-linux
        path: |
          **/TestResults/**/*.xml
          **/TestResults/**/*.trx
        retention-days: 5

  # Build Android on Linux
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: build-shared
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '17'

    - name: Install MAUI workloads
      run: |
        dotnet workload install maui-android --verbosity normal
        dotnet workload list

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ExpenseTracker.Maui/ExpenseTracker.Maui.csproj

    - name: Build MAUI for Android
      run: dotnet build ExpenseTracker.Maui/ExpenseTracker.Maui.csproj -f net9.0-android --configuration Release --no-restore

  # Build Windows on Windows runner
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: build-shared
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workloads
      run: |
        dotnet workload install maui --verbosity normal
        dotnet workload list

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ExpenseTracker.Maui/ExpenseTracker.Maui.csproj

    - name: Build MAUI for Windows
      run: dotnet build ExpenseTracker.Maui/ExpenseTracker.Maui.csproj -f net9.0-windows10.0.19041.0 --configuration Release --no-restore

  # Build macOS and iOS on macOS runner
  build-macos:
    name: Build macOS and iOS
    runs-on: macos-latest
    needs: build-shared
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workloads
      run: |
        dotnet workload install maui --verbosity normal
        dotnet workload list

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ExpenseTracker.Maui/ExpenseTracker.Maui.csproj

    - name: Build MAUI for iOS
      run: dotnet build ExpenseTracker.Maui/ExpenseTracker.Maui.csproj -f net9.0-ios --configuration Release --no-restore

    - name: Build MAUI for macCatalyst
      run: dotnet build ExpenseTracker.Maui/ExpenseTracker.Maui.csproj -f net9.0-maccatalyst --configuration Release --no-restore

  # Code quality analysis
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-shared
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore shared projects
      run: |
        dotnet restore ExpenseTracker.Shared/ExpenseTracker.Shared.csproj

    - name: Check code formatting
      run: |
        dotnet format ExpenseTracker.Shared/ExpenseTracker.Shared.csproj --verify-no-changes --verbosity normal
      continue-on-error: true

    - name: Run static analysis
      run: |
        dotnet build ExpenseTracker.Shared/ExpenseTracker.Shared.csproj --configuration Release --verbosity normal /p:TreatWarningsAsErrors=false